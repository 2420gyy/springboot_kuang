package com.chen.GOF;

/**
 * @author chenchen
 * @date 2021-12-04 20:41
 */

/**
 * 执行类构造器<clinit>()方法的过程。类构造器<clinit>()方法是由编译期自动收集类中
 * 所有类变量的赋值动作和静态代码块中的语句合并产生的。（类构造器是构造类信
 * 息的，不是构造该类对象的构造器）。
 * 当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先触发其父类
 * 的初始化。
 * 虚拟机会保证一个类的<clinit>()方法在多线程环境中被正确加锁和同步。
 */

/**
 * 类的加载顺序
 * * 1加载器启动找到 xxx.class文件，通过extends关键字寻找基类，先加载基类
 * * 2类初始化先初始化static成员变量和static--->
 * * 2先初始化父类的static成员变量和static
 * * 3再初始化本类的static成员变量和static
 *
 * * 类加载之后，对象创建开始
 * * 1先加载父类的非静态成员变量（静态成员变量在类初始化的时候已经加载，非静态成员变量要随对象的创建而初始化）
 * * 2先加载父类的构造函数
 * * 3再加载本类的非静态成员变量
 * * 4再加载本类的构造函数
 * *
 *
 *  总体：
 * * -->表示顺序
 * * 父类-->子类
 * * 静态-->非静态
 * * 类-->对象
 * * static随类的加载而加载
 * * 非static成员变量随对象的创建而加载
 * * 成员变量先于构造器加载
 */
public class 类加载顺序测试ClassLoadOrder{

}
